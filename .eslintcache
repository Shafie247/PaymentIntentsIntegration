[{"/Users/shafie.ali/Desktop/stripe-test/src/App.js":"1","/Users/shafie.ali/Desktop/stripe-test/src/index.js":"2","/Users/shafie.ali/Desktop/stripe-test/src/reportWebVitals.js":"3"},{"size":3224,"mtime":1610998396729,"results":"4","hashOfConfig":"5"},{"size":500,"mtime":1610898291799,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610898291810,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1fvf0c7",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shafie.ali/Desktop/stripe-test/src/App.js",["15"],"import { useState } from 'react';\nimport {Elements, CardElement, ElementsConsumer} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\nimport items from './items.json';\nimport './App.css';\n\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLISHABLE_KEY)\n\nfunction App() {\n  const [cart, setCart] = useState([]);\n  const [isCheckingOut, setIsCheckingOut] = useState(false);\n  const [clientSecret, setClientSecret] = useState(null);\n\n  const addItem = item => {\n    setCart(prevState => [item, ...prevState])\n  }\n\n  const checkoutItems = async () => {\n    setIsCheckingOut(true);\n    const response = await fetch('/payment-intent', {\n      method: 'POST',\n      body: JSON.stringify({\n        items: cart, currency: 'gbp'\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n\n    const res = await response.json();\n    console.log('yoo==>>>', res)\n    setClientSecret(res.clientSecret);\n  }\n\n  const handleSubmit = async (e, elements, stripe) => {\n    e.preventDefault();\n    if (!stripe || !elements) return;\n\n    const card = elements.getElement(CardElement);\n    const {error, paymentMethod} = await stripe.createPaymentMethod({type: 'card', card});\n    console.log('got here==>>>', error, 'payme==>>', paymentMethod);\n\n    if (error) {\n      console.log('error occuredd==>>', error)\n    } else {\n      try {\n        const result = await stripe.confirmCardPayment(clientSecret, {\n          payment_method: {\n            card\n          }\n        });\n        console.log('result==>>>', result);\n      } catch (err) {\n\n      }\n    }\n  }\n\n  const CARD_ELEMENT_OPTIONS = {\n    style: {\n      base: {\n        color: \"#32325d\",\n        fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n        fontSmoothing: \"antialiased\",\n        fontSize: \"16px\",\n        \"::placeholder\": {\n          color: \"#aab7c4\",\n        },\n      },\n      invalid: {\n        color: \"#fa755a\",\n        iconColor: \"#fa755a\",\n      },\n    },\n  };\n\n  return (\n    <div className=\"App container\">\n\n      <button onClick={checkoutItems} >Checkout {cart.length} Items</button>\n\n      {!isCheckingOut && <div className=\"row col-sm-12\">\n        {items.map((item, i) => (\n          <div key={i} className=\"card col-sm-3\" style={{ width: '18rem' }}>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{item.title}</h5>\n              <h6 className=\"card-subtitle mb-2 text-muted\">{item.type}</h6>\n              <p className=\"card-text\">{item.description}</p>\n              <span className=\"card-link\">{item.price}</span>\n              <button onClick={() => addItem(item)} >Add to Cart</button>\n            </div>\n          </div>\n        ))}\n      </div>}\n\n      {isCheckingOut && <div>\n        <Elements stripe={stripePromise}>\n        <ElementsConsumer>{({elements, stripe}) => (\n          <form onSubmit={e => handleSubmit(e, elements, stripe)}>\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\n            <br/><br/>\n            <div>\n              <button id=\"submit\" disabled={!stripe}> Pay </button>\n            </div>\n          </form>\n        )}</ElementsConsumer>\n        </Elements>\n      </div>}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/shafie.ali/Desktop/stripe-test/src/index.js",[],"/Users/shafie.ali/Desktop/stripe-test/src/reportWebVitals.js",[],{"ruleId":"16","severity":1,"message":"17","line":4,"column":8,"nodeType":"18","messageId":"19","endLine":4,"endColumn":16},"no-unused-vars","'ReactDom' is defined but never used.","Identifier","unusedVar"]